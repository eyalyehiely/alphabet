DEBUG 2024-08-08 13:58:03,975 functional 16395 8716307456 
def backend_cleanup():
    return 1

DEBUG 2024-08-08 13:58:03,976 functional 16395 8716307456 
def debug_task(self):
    return 1

DEBUG 2024-08-08 13:58:03,976 functional 16395 8716307456 
def send_event_reminder():
    return 1

DEBUG 2024-08-08 13:58:03,976 functional 16395 8716307456 
def chain(*args, **kwargs):
    return 1

DEBUG 2024-08-08 13:58:03,976 functional 16395 8716307456 
def xstarmap(task, it):
    return 1

DEBUG 2024-08-08 13:58:03,976 functional 16395 8716307456 
def accumulate(self, *args, **kwargs):
    return 1

DEBUG 2024-08-08 13:58:03,976 functional 16395 8716307456 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG 2024-08-08 13:58:03,977 functional 16395 8716307456 
def chunks(task, it, n):
    return 1

DEBUG 2024-08-08 13:58:03,977 functional 16395 8716307456 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG 2024-08-08 13:58:03,977 functional 16395 8716307456 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG 2024-08-08 13:58:03,977 functional 16395 8716307456 
def xmap(task, it):
    return 1

DEBUG 2024-08-08 16:08:17,262 functional 19200 8716307456 
def backend_cleanup():
    return 1

DEBUG 2024-08-08 16:08:17,263 functional 19200 8716307456 
def debug_task(self):
    return 1

DEBUG 2024-08-08 16:08:17,263 functional 19200 8716307456 
def chain(*args, **kwargs):
    return 1

DEBUG 2024-08-08 16:08:17,263 functional 19200 8716307456 
def xstarmap(task, it):
    return 1

DEBUG 2024-08-08 16:08:17,263 functional 19200 8716307456 
def send_event_reminder():
    return 1

DEBUG 2024-08-08 16:08:17,263 functional 19200 8716307456 
def accumulate(self, *args, **kwargs):
    return 1

DEBUG 2024-08-08 16:08:17,263 functional 19200 8716307456 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG 2024-08-08 16:08:17,263 functional 19200 8716307456 
def chunks(task, it, n):
    return 1

DEBUG 2024-08-08 16:08:17,264 functional 19200 8716307456 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG 2024-08-08 16:08:17,264 functional 19200 8716307456 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG 2024-08-08 16:08:17,264 functional 19200 8716307456 
def xmap(task, it):
    return 1

DEBUG 2024-08-08 16:49:46,013 functional 19915 6165999616 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG 2024-08-08 16:49:46,014 functional 19915 6165999616 
def xmap(task, it):
    return 1

DEBUG 2024-08-08 16:49:46,014 functional 19915 6165999616 
def backend_cleanup():
    return 1

DEBUG 2024-08-08 16:49:46,014 functional 19915 6165999616 
def send_email(event_id, participants, action):
    return 1

DEBUG 2024-08-08 16:49:46,014 functional 19915 6165999616 
def chain(*args, **kwargs):
    return 1

DEBUG 2024-08-08 16:49:46,014 functional 19915 6165999616 
def xstarmap(task, it):
    return 1

DEBUG 2024-08-08 16:49:46,014 functional 19915 6165999616 
def accumulate(self, *args, **kwargs):
    return 1

DEBUG 2024-08-08 16:49:46,014 functional 19915 6165999616 
def debug_task(self):
    return 1

DEBUG 2024-08-08 16:49:46,015 functional 19915 6165999616 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG 2024-08-08 16:49:46,015 functional 19915 6165999616 
def chunks(task, it, n):
    return 1

DEBUG 2024-08-08 16:49:46,015 functional 19915 6165999616 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

DEBUG 2024-08-08 16:49:46,015 functional 19915 6165999616 
def send_event_reminder():
    return 1

DEBUG 2024-08-08 17:44:25,750 functional 21310 6114488320 
def group(self, tasks, result, group_id, partial_args, add_to_parent=0):
    return 1

DEBUG 2024-08-08 17:44:25,753 functional 21310 6114488320 
def xmap(task, it):
    return 1

DEBUG 2024-08-08 17:44:25,753 functional 21310 6114488320 
def backend_cleanup():
    return 1

DEBUG 2024-08-08 17:44:25,754 functional 21310 6114488320 
def send_event_reminder():
    return 1

DEBUG 2024-08-08 17:44:25,754 functional 21310 6114488320 
def chain(*args, **kwargs):
    return 1

DEBUG 2024-08-08 17:44:25,755 functional 21310 6114488320 
def xstarmap(task, it):
    return 1

DEBUG 2024-08-08 17:44:25,755 functional 21310 6114488320 
def accumulate(self, *args, **kwargs):
    return 1

DEBUG 2024-08-08 17:44:25,756 functional 21310 6114488320 
def debug_task(self):
    return 1

DEBUG 2024-08-08 17:44:25,756 functional 21310 6114488320 
def send_update_email(event_id, participants, action):
    return 1

DEBUG 2024-08-08 17:44:25,756 functional 21310 6114488320 
def chord(self, header, body, partial_args=0, interval=1, countdown=2, max_retries=3, eager=4, **kwargs):
    return 1

DEBUG 2024-08-08 17:44:25,757 functional 21310 6114488320 
def chunks(task, it, n):
    return 1

DEBUG 2024-08-08 17:44:25,757 functional 21310 6114488320 
def unlock_chord(self, group_id, callback, interval=0, max_retries=1, result=2, Result=3, GroupResult=4, result_from_tuple=5, **kwargs):
    return 1

